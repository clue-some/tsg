<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   id="svg2"
   viewBox="0 0 1440 900"
   version="1.1"
   inkscape:version="0.48.0 r9654"
   width="100%"
   height="100%"
   sodipodi:docname="own basic set attribute example.svg">
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1276"
     inkscape:window-height="782"
     id="namedview5336"
     showgrid="false"
     inkscape:zoom="0.63555556"
     inkscape:cx="720"
     inkscape:cy="450"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg2" />
  <defs
     id="defs5338" />
  <script
     type="text/javascript"
     id="inkwebjs">
/* inkweb.js - InkWebEffect:AutoUpdate */
/*
**  InkWeb - Inkscape's Javscript features for the open vector web
**
**  Copyright (C) 2009 Aurelio A. Heckert, aurium (a) gmail dot com
**
**  ********* Bugs and New Fetures *************************************
**   If you found any bug on this script or if you want to propose a
**   new feature, please report it in the inkscape bug traker
**   https://bugs.launchpad.net/inkscape/+filebug
**   and assign that to Aurium.
**  ********************************************************************
**
**  This program is free software: you can redistribute it and/or modify
**  it under the terms of the GNU Lesser General Public License as published
**  by the Free Software Foundation, either version 3 of the License, or
**  (at your option) any later version.
**
**  This program is distributed in the hope that it will be useful,
**  but WITHOUT ANY WARRANTY; without even the implied warranty of
**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**  GNU Lesser General Public License for more details.
**
**  You should have received a copy of the GNU Lesser General Public License
**  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
*/

var InkWeb = {

  version: 0.04,

  NS: {
    svg:      &quot;http://www.w3.org/2000/svg&quot;,
    sodipodi: &quot;http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd&quot;,
    inkscape: &quot;http://www.inkscape.org/namespaces/inkscape&quot;,
    cc:       &quot;http://creativecommons.org/ns#&quot;,
    dc:       &quot;http://purl.org/dc/elements/1.1/&quot;,
    rdf:      &quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;,
    xlink:    &quot;http://www.w3.org/1999/xlink&quot;,
    xml:      &quot;http://www.w3.org/XML/1998/namespace&quot;
  }

};

InkWeb.el = function (tag, attributes) {
  // A helper to create SVG elements
  var element = document.createElementNS( this.NS.svg, tag );
  for ( var att in attributes ) {
    switch ( att ) {
      case &quot;parent&quot;:
        attributes.parent.appendChild( element );
        break;
      case &quot;text&quot;:
        element.appendChild( document.createTextNode( attributes.text ) );
        break;
      default:
        element.setAttribute( att, attributes[att] );
    }
  }
  return element;
}

InkWeb.reGetStyleAttVal = function (att) {
  return new RegExp( &quot;(^|.*;)[ ]*&quot;+ att +&quot;:([^;]*)(;.*|$)&quot; )
}

InkWeb.getStyle = function (el, att) {
  // This method is needed because el.style is only working
  // to HTML style in the Firefox 3.0
  if ( typeof(el) == &quot;string&quot; )
    el = document.getElementById(el);
  var style = el.getAttribute(&quot;style&quot;);
  var match = this.reGetStyleAttVal(att).exec(style);
  if ( match ) {
    return match[2];
  } else {
    return false;
  }
}

InkWeb.setStyle = function (el, att, val) {
  if ( typeof(el) == &quot;string&quot; )
    el = document.getElementById(el);
  var style = el.getAttribute(&quot;style&quot;);
  re = this.reGetStyleAttVal(att);
  if ( re.test(style) ) {
    style = style.replace( re, &quot;$1&quot;+ att +&quot;:&quot;+ val +&quot;$3&quot; );
  } else {
    style += &quot;;&quot;+ att +&quot;:&quot;+ val;
  }
  el.setAttribute( &quot;style&quot;, style );
  return val
}

InkWeb.transmitAtt = function (conf) {
  conf.att = conf.att.split( /\s+/ );
  if ( typeof(conf.from) == &quot;string&quot; )
    conf.from = document.getElementById( conf.from );
  if ( ! conf.to.join )
    conf.to = [ conf.to ];
  for ( var toEl,elN=0; toEl=conf.to[elN]; elN++ ) {
    if ( typeof(toEl) == &quot;string&quot; )
      toEl = document.getElementById( toEl );
    for ( var i=0; i&lt;conf.att.length; i++ ) {
      var val = this.getStyle( conf.from, conf.att[i] );
      if ( val ) {
        this.setStyle( toEl, conf.att[i], val );
      } else {
        val = conf.from.getAttribute(conf.att[i]);
        toEl.setAttribute( conf.att[i], val );
      }
    }
  }
}

InkWeb.setAtt = function (conf) {
  if ( ! conf.el.join )
    conf.to = [ conf.el ];
  conf.att = conf.att.split( /\s+/ );
  conf.val = conf.val.split( /\s+/ );
  for ( var el,elN=0; el=conf.el[elN]; elN++ ) {
    if ( typeof(el) == &quot;string&quot; )
      el = document.getElementById( el );
    for ( var att,i=0; att=conf.att[i]; i++ ) {
      if (
           att == &quot;width&quot;  ||
           att == &quot;height&quot; ||
           att == &quot;x&quot;  ||
           att == &quot;y&quot;  ||
           att == &quot;cx&quot; ||
           att == &quot;cy&quot; ||
           att == &quot;r&quot;  ||
           att == &quot;rx&quot; ||
           att == &quot;ry&quot; ||
           att == &quot;transform&quot;
         ) {
        el.setAttribute( att, conf.val[i] );
      } else {
        this.setStyle( el, att, conf.val[i] );
      }
    }
  }
}

InkWeb.moveElTo = function (startConf) {
  if ( typeof(startConf) == &quot;string&quot; ) {
    // startConf may be only a element Id, to timeout recursive calls.
    var el = document.getElementById( startConf );
  } else {
    if ( typeof(startConf.el) == &quot;string&quot; )
      startConf.el = document.getElementById( startConf.el );
    var el = startConf.el;
  }
  if ( ! el.inkWebMoving ) {
    el.inkWebMoving = {
      step: 0
    };
  }
  var conf = el.inkWebMoving;
  if ( conf.step == 0 ) {
    conf.x = startConf.x;
    conf.y = startConf.y;
    // dur : duration of the animation in seconds
    if ( startConf.dur ) { conf.dur = startConf.dur }
    else { conf.dur = 1 }
    // steps : animation steps in a second
    if ( startConf.stepsBySec ) { conf.stepsBySec = startConf.stepsBySec }
    else { conf.stepsBySec = 16 }
    conf.sleep = Math.round( 1000 / conf.stepsBySec );
    conf.steps = conf.dur * conf.stepsBySec;
    var startPos = el.getBBox();
    conf.xInc = ( conf.x - startPos.x ) / conf.steps;
    conf.yInc = ( conf.y - startPos.y ) / conf.steps;
    conf.transform = el.transform.baseVal.consolidate();
    if ( ! conf.transform ) {
      conf.transform = el.ownerSVGElement.createSVGTransform();
    }
    el.transform.baseVal.clear();
    el.transform.baseVal.appendItem(conf.transform);
  }
  if ( conf.step &lt; conf.steps ) {
    conf.step++;
    conf.transform.matrix.e += conf.xInc;
    conf.transform.matrix.f += conf.yInc;
    try{ el.ownerSVGElement.forceRedraw() }
    catch(e){ this.log(e, &quot;this &quot;+el.ownerSVGElement+&quot; has no forceRedraw().&quot;) }
    conf.timeout = setTimeout( 'InkWeb.moveElTo(&quot;'+el.id+'&quot;)', conf.sleep );
  } else {
    delete el.inkWebMoving;
  }
}

InkWeb.log = function () { /* if you need that, use the inkweb-debug.js too */ }
</script>
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <style
     type="text/css"
     id="style3056">rect:hover {fill:#ea3815;}
#a3893 path:hover {fill:#0af895;}
#a3949 path:hover {fill:#2a4fbc;}</style>
  <a
     transform="translate(0,-152.36218)"
     id="a3053"
     xlink:href="http:/tracksuitgene.dev/"
     stroke-miterlimit="4"
     style="fill:#c6eacf;stroke-width:50;stroke-miterlimit:4;stroke-dasharray:none">
    <rect
       id="rect2987"
       transform="translate(0,152.36218)"
       ry="0"
       height="424.28571"
       width="527.14288"
       stroke-miterlimit="4"
       y="68.571426"
       x="75.714287"
       style="stroke:#000000;stroke-width:50;stroke-linecap:square;stroke-miterlimit:4;stroke-dasharray:none" />
  </a>
  <a
     onmouseout="InkWeb.setAtt({el:['a3053'], att:'fill', val:'c6eacf'});
"
     id="a3893"
     xlink:href="/Users/Phil/Pictures/Artwork/Tracksuitgene/Edits/master css/tracksuitgene.com"
     transform="matrix(0.96263155,0,0,1,27.155139,-152.36218)"
     onmouseover="InkWeb.setAtt({el:['a3053'], att:'fill', val:'black'}); InkWeb.setAtt({el:['a3053'], att:'fill', val:'blue'}); "
     style="fill:#c6eacf">
    <path
       id="path3087"
       d="m 726.68626,334.15555 c 483.25254,-2.4532 480.11444,-302.9703 483.25254,-3.6798 3.1379,299.2905 487.9594,301.7437 4.7069,299.2905 -483.25243,-2.4532 -481.68344,289.4777 -487.95944,-295.6107 z"
       stroke-miterlimit="4"
       inkscape:connector-curvature="0"
       style="stroke:#000000;stroke-width:50;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none" />
  </a>
  <a
     transform="translate(0,-152.36218)"
     id="a3949"
     xlink:href="http://localhost/"
     stroke-miterlimit="4"
     style="fill:#c6eacf;stroke-width:50;stroke-miterlimit:4;stroke-dasharray:none">
    <path
       id="path3935"
       d="M 111.42857,826.64789 C 725.71429,792.36218 597.14286,640.9336 725.71429,792.36218 854.28571,943.79075 111.42857,826.64789 111.42857,826.64789 z"
       stroke-miterlimit="4"
       inkscape:connector-curvature="0"
       style="stroke:#000000;stroke-width:50;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none" />
  </a>
</svg>
